"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[69],{47069:(V,H,d)=>{d.r(H),d.d(H,{StandardSolflareMetaMaskWalletAccount:()=>M,default:()=>R});var f=d(73434),K=d(88139),W=d(48025),l=d.n(W),O=d(57565);function _(s){return s.version===void 0}function C(s){return _(s)?s.serialize({verifySignatures:!1,requireAllSignatures:!1}):s.serialize()}function D(s){return _(s)?s.serializeMessage():s.message.serialize()}function U(s,n,e){if(_(s))s.addSignature(n,Buffer.from(e));else{const i=s.message.staticAccountKeys.slice(0,s.message.header.numRequiredSignatures).findIndex(r=>r.equals(n));i>=0&&(s.signatures[i]=e)}}var x=function(s,n,e,t){function i(r){return r instanceof e?r:new e(function(a){a(r)})}return new(e||(e=Promise))(function(r,a){function m(o){try{h(t.next(o))}catch(u){a(u)}}function p(o){try{h(t.throw(o))}catch(u){a(u)}}function h(o){o.done?r(o.value):i(o.value).then(m,p)}h((t=t.apply(s,n||[])).next())})};function I(s){return x(this,void 0,void 0,function*(){try{return yield s.request({method:"wallet_getSnaps"}),!0}catch{return!1}})}function L(){return x(this,void 0,void 0,function*(){try{const s=window.ethereum;if(!s)return null;if(s.providers&&Array.isArray(s.providers)){const n=s.providers;for(const e of n)if(yield I(e))return e}if(s.detected&&Array.isArray(s.detected)){const n=s.detected;for(const e of n)if(yield I(e))return e}return(yield I(s))?s:null}catch(s){return console.error(s),null}})}var j=d(41078),k=d(24159),P=d(75140);const z=["solana:mainnet","solana:devnet","solana:testnet","solana:localnet"];function N(s){return z.includes(s)}var g=function(s,n,e,t){if(e==="a"&&!t)throw new TypeError("Private accessor was defined without a getter");if(typeof n=="function"?s!==n||!t:!n.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?t:e==="a"?t.call(s):t?t.value:n.get(s)},v=function(s,n,e,t,i){if(t==="m")throw new TypeError("Private method is not writable");if(t==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof n=="function"?s!==n||!i:!n.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t==="a"?i.call(s,e):i?i.value=e:n.set(s,e),e},w,y,A,S,E,T;const F=z,$=[j.R,k.q,P.F];class M{get address(){return g(this,w,"f")}get publicKey(){return g(this,y,"f").slice()}get chains(){return g(this,A,"f").slice()}get features(){return g(this,S,"f").slice()}get label(){return g(this,E,"f")}get icon(){return g(this,T,"f")}constructor({address:n,publicKey:e,label:t,icon:i}){w.set(this,void 0),y.set(this,void 0),A.set(this,void 0),S.set(this,void 0),E.set(this,void 0),T.set(this,void 0),new.target===M&&Object.freeze(this),v(this,w,n,"f"),v(this,y,e,"f"),v(this,A,F,"f"),v(this,S,$,"f"),v(this,E,t,"f"),v(this,T,i,"f")}}w=new WeakMap,y=new WeakMap,A=new WeakMap,S=new WeakMap,E=new WeakMap,T=new WeakMap;var c=function(s,n,e,t){function i(r){return r instanceof e?r:new e(function(a){a(r)})}return new(e||(e=Promise))(function(r,a){function m(o){try{h(t.next(o))}catch(u){a(u)}}function p(o){try{h(t.throw(o))}catch(u){a(u)}}function h(o){o.done?r(o.value):i(o.value).then(m,p)}h((t=t.apply(s,n||[])).next())})};class b extends K.A{constructor(n){super(),this._network="mainnet-beta",this._iframeParams={},this._element=null,this._iframe=null,this._publicKey=null,this._account=null,this._isConnected=!1,this._connectHandler=null,this._messageHandlers={},this._handleEvent=e=>{var t,i;switch(e.type){case"connect":{this._collapseIframe(),!((t=e.data)===null||t===void 0)&&t.publicKey?(this._publicKey=e.data.publicKey,this._isConnected=!0,this._connectHandler&&(this._connectHandler.resolve(),this._connectHandler=null),this._connected()):(this._connectHandler&&(this._connectHandler.reject(),this._connectHandler=null),this._disconnected());return}case"disconnect":{this._connectHandler&&(this._connectHandler.reject(),this._connectHandler=null),this._disconnected();return}case"accountChanged":{!((i=e.data)===null||i===void 0)&&i.publicKey?(this._publicKey=e.data.publicKey,this.emit("accountChanged",this.publicKey),this._standardConnected()):(this.emit("accountChanged",void 0),this._standardDisconnected());return}default:return}},this._handleResize=e=>{e.resizeMode==="full"?e.params.mode==="fullscreen"?this._expandIframe():e.params.mode==="hide"&&this._collapseIframe():e.resizeMode==="coordinates"&&this._resizeIframe(e.params)},this._handleMessage=e=>{var t;if(((t=e.data)===null||t===void 0?void 0:t.channel)!=="solflareIframeToWalletAdapter")return;const i=e.data.data||{};if(i.type==="event")this._handleEvent(i.event);else if(i.type==="resize")this._handleResize(i);else if(i.type==="response"&&this._messageHandlers[i.id]){const{resolve:r,reject:a}=this._messageHandlers[i.id];delete this._messageHandlers[i.id],i.error?a(i.error):r(i.result)}},this._removeElement=()=>{this._element&&(this._element.remove(),this._element=null)},this._removeDanglingElements=()=>{const e=document.getElementsByClassName("solflare-metamask-wallet-adapter-iframe");for(const t of e)t.parentElement&&t.remove()},this._injectElement=()=>{this._removeElement(),this._removeDanglingElements();const e=Object.assign(Object.assign({},this._iframeParams),{mm:!0,v:1,cluster:this._network||"mainnet-beta",origin:window.location.origin||"",title:document.title||""}),t=Object.keys(e).map(r=>`${r}=${encodeURIComponent(e[r])}`).join("&"),i=`${b.IFRAME_URL}?${t}`;this._element=document.createElement("div"),this._element.className="solflare-metamask-wallet-adapter-iframe",this._element.innerHTML=`
      <iframe src='${i}' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>
    `,document.body.appendChild(this._element),this._iframe=this._element.querySelector("iframe"),window.addEventListener("message",this._handleMessage,!1)},this._collapseIframe=()=>{this._iframe&&(this._iframe.style.top="",this._iframe.style.right="",this._iframe.style.height="2px",this._iframe.style.width="2px")},this._expandIframe=()=>{this._iframe&&(this._iframe.style.top="0px",this._iframe.style.bottom="0px",this._iframe.style.left="0px",this._iframe.style.right="0px",this._iframe.style.width="100%",this._iframe.style.height="100%")},this._resizeIframe=e=>{this._iframe&&(this._iframe.style.top=isFinite(e.top)?`${e.top}px`:"",this._iframe.style.bottom=isFinite(e.bottom)?`${e.bottom}px`:"",this._iframe.style.left=isFinite(e.left)?`${e.left}px`:"",this._iframe.style.right=isFinite(e.right)?`${e.right}px`:"",this._iframe.style.width=isFinite(e.width)?`${e.width}px`:e.width,this._iframe.style.height=isFinite(e.height)?`${e.height}px`:e.height)},this._sendIframeMessage=e=>{if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");return new Promise((t,i)=>{var r,a;const m=(0,O.A)();this._messageHandlers[m]={resolve:t,reject:i},(a=(r=this._iframe)===null||r===void 0?void 0:r.contentWindow)===null||a===void 0||a.postMessage({channel:"solflareWalletAdapterToIframe",data:Object.assign({id:m},e)},"*")})},this._connected=()=>{this._isConnected=!0,this.emit("connect",this.publicKey),this._standardConnected()},this._disconnected=()=>{this._publicKey=null,this._isConnected=!1,window.removeEventListener("message",this._handleMessage,!1),this._removeElement(),this.emit("disconnect"),this._standardDisconnected()},this._standardConnected=()=>{if(!this.publicKey)return;const e=this.publicKey.toString();(!this._account||this._account.address!==e)&&(this._account=new M({address:e,publicKey:this.publicKey.toBytes()}),this.emit("standard_change",{accounts:this.standardAccounts}))},this._standardDisconnected=()=>{this._account&&(this._account=null,this.emit("standard_change",{accounts:this.standardAccounts}))},n?.network&&(this._network=n?.network),window.SolflareMetaMaskParams&&(this._iframeParams=Object.assign(Object.assign({},this._iframeParams),window.SolflareMetaMaskParams)),n?.params&&(this._iframeParams=Object.assign(Object.assign({},this._iframeParams),n?.params))}get publicKey(){return this._publicKey?new f.PublicKey(this._publicKey):null}get standardAccount(){return this._account}get standardAccounts(){return this._account?[this._account]:[]}get isConnected(){return this._isConnected}get connected(){return this.isConnected}get autoApprove(){return!1}connect(){return c(this,void 0,void 0,function*(){this.connected||(this._injectElement(),yield new Promise((n,e)=>{this._connectHandler={resolve:n,reject:e}}))})}disconnect(){return c(this,void 0,void 0,function*(){yield this._sendIframeMessage({method:"disconnect"}),this._disconnected()})}signTransaction(n){var e;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const t=C(n),i=yield this._sendIframeMessage({method:"signTransactionV2",params:{transaction:l().encode(t)}}),{transaction:r}=i;return _(n)?f.Transaction.from(l().decode(r)):f.VersionedTransaction.deserialize(l().decode(r))}catch(t){throw new Error(((e=t?.toString)===null||e===void 0?void 0:e.call(t))||"Failed to sign transaction")}})}signAllTransactions(n){var e;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const t=n.map(r=>C(r)),{transactions:i}=yield this._sendIframeMessage({method:"signAllTransactionsV2",params:{transactions:t.map(r=>l().encode(r))}});return i.map((r,a)=>_(n[a])?f.Transaction.from(l().decode(r)):f.VersionedTransaction.deserialize(l().decode(r)))}catch(t){throw new Error(((e=t?.toString)===null||e===void 0?void 0:e.call(t))||"Failed to sign transactions")}})}signAndSendTransaction(n,e){var t;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const i=C(n),{signature:r}=yield this._sendIframeMessage({method:"signAndSendTransaction",params:{transaction:l().encode(i),options:e}});return r}catch(i){throw new Error(((t=i?.toString)===null||t===void 0?void 0:t.call(i))||"Failed to sign and send transaction")}})}signMessage(n,e="utf8"){var t;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const{signature:i}=yield this._sendIframeMessage({method:"signMessage",params:{data:l().encode(n),display:e}});return Uint8Array.from(l().decode(i))}catch(i){throw new Error(((t=i?.toString)===null||t===void 0?void 0:t.call(i))||"Failed to sign message")}})}sign(n,e="utf8"){return c(this,void 0,void 0,function*(){return yield this.signMessage(n,e)})}static isSupported(){return c(this,void 0,void 0,function*(){return!!(yield L())})}standardSignAndSendTransaction(...n){return c(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const e=[];if(n.length===1){const{transaction:t,account:i,chain:r,options:a}=n[0],{minContextSlot:m,preflightCommitment:p,skipPreflight:h,maxRetries:o}=a||{};if(i!==this._account)throw new Error("invalid account");if(!N(r))throw new Error("invalid chain");const u=yield this.signAndSendTransaction(f.VersionedTransaction.deserialize(t),{preflightCommitment:p,minContextSlot:m,maxRetries:o,skipPreflight:h});e.push({signature:l().decode(u)})}else if(n.length>1)for(const t of n)e.push(...yield this.standardSignAndSendTransaction(t));return e})}standardSignTransaction(...n){return c(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const e=[];if(n.length===1){const{transaction:t,account:i,chain:r}=n[0];if(i!==this._account)throw new Error("invalid account");if(r&&!N(r))throw new Error("invalid chain");const a=yield this.signTransaction(f.VersionedTransaction.deserialize(t));e.push({signedTransaction:a.serialize()})}else if(n.length>1){let t;for(const a of n){if(a.account!==this._account)throw new Error("invalid account");if(a.chain){if(!N(a.chain))throw new Error("invalid chain");if(t){if(a.chain!==t)throw new Error("conflicting chain")}else t=a.chain}}const i=n.map(({transaction:a})=>f.VersionedTransaction.deserialize(a)),r=yield this.signAllTransactions(i);e.push(...r.map(a=>({signedTransaction:a.serialize()})))}return e})}standardSignMessage(...n){return c(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const e=[];if(n.length===1){const{message:t,account:i}=n[0];if(i!==this._account)throw new Error("invalid account");const r=yield this.signMessage(t);e.push({signedMessage:t,signature:r})}else if(n.length>1)for(const t of n)e.push(...yield this.standardSignMessage(t));return e})}}b.IFRAME_URL="https://widget.solflare.com/";const R=b}}]);

//# sourceMappingURL=69.12deea8a.chunk.js.map